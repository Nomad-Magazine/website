---
import Layout, { type SEOProps } from '~/layouts/Layout.astro'

const { url } = Astro
const shouldGenerate = url.searchParams.get('generate') === 'true'
const name = url.searchParams.get('name')
const birthdate = url.searchParams.get('birthdate')

let horoscopeData = null
let error = null

if (shouldGenerate && name && birthdate) {
  try {
    const response = await fetch(`${url.origin}/api/horoscope?name=${encodeURIComponent(name)}&birthdate=${encodeURIComponent(birthdate)}`)
    if (response.ok) {
      horoscopeData = await response.json()
    } else {
      error = 'Failed to generate horoscope'
    }
  } catch (e) {
    error = 'Failed to generate horoscope'
  }
}

const seo: SEOProps = {
  title: 'Digital Nomad Horoscope | Nomad Magazine',
  description: 'Discover your nomadic destiny with our specialized horoscope for digital nomads. Get personalized astrological insights for your travel and work adventures.',
  image: `${Astro.site}images/187987f5-e9fc-4a74-b6ef-304b3d4a92e2.webp`,
  keywords: 'nomad horoscope, digital nomad astrology, travel horoscope, nomad destiny, astrological insights',
}
---

<Layout seo={seo}>
  <style>
    .container {
      text-align: center;
      background: white;
      padding: 40px;
      border-radius: 16px;
      box-shadow: 0 20px 40px rgba(0, 0, 0, 0.1);
      max-width: 500px;
      width: 90%;
    }
    h1 {
      color: #121111;
      margin-bottom: 8px;
      font-size: 2.5rem;
      font-weight: 700;
    }
    h2 {
      color: #666;
      margin-bottom: 32px;
      font-size: 1.1rem;
      font-weight: 400;
    }
    input {
      width: 100%;
      padding: 16px;
      margin: 12px 0;
      border: 2px solid #d8d8d8;
      border-radius: 8px;
      font-size: 16px;
      transition: border-color 0.3s ease;
      box-sizing: border-box;
    }
    input:focus {
      outline: none;
      border-color: #f4dc01;
    }
    button {
      width: 100%;
      padding: 16px;
      margin: 20px 0;
      background-color: #121111;
      color: white;
      border: none;
      border-radius: 8px;
      font-size: 16px;
      font-weight: 600;
      cursor: pointer;
      transition: all 0.3s ease;
    }
    button:hover {
      background-color: #333;
      transform: translateY(-2px);
    }
    button:disabled {
      background-color: #d8d8d8;
      cursor: not-allowed;
      transform: none;
    }
    .result {
      margin-top: 32px;
      text-align: left;
    }
    .loading {
      display: none;
      color: #666;
      font-style: italic;
      text-align: center;
      padding: 20px;
    }
    
    .loading-spinner {
      display: inline-block;
      width: 40px;
      height: 40px;
      border: 4px solid #d8d8d8;
      border-radius: 50%;
      border-top-color: #f4dc01;
      animation: spin 1s ease-in-out infinite;
      margin-bottom: 16px;
    }
    
    .loading-stars {
      display: inline-block;
      font-size: 24px;
      animation: pulse 2s ease-in-out infinite;
    }
    
    .loading-text {
      font-size: 18px;
      color: #666;
      margin-top: 12px;
      animation: fade 3s ease-in-out infinite;
    }
    
    @keyframes spin {
      to { transform: rotate(360deg); }
    }
    
    @keyframes pulse {
      0%, 100% { opacity: 0.5; transform: scale(1); }
      50% { opacity: 1; transform: scale(1.1); }
    }
    
    @keyframes fade {
      0%, 100% { opacity: 0.6; }
      50% { opacity: 1; }
    }
    .error {
      color: #e74c3c;
      background-color: #fdf2f2;
      padding: 16px;
      border-radius: 8px;
      margin-top: 16px;
    }
    .form-hidden {
      display: none;
    }
  </style>
  
    <div class="min-h-screen bg-gradient-to-br from-purple-900 via-blue-900 to-indigo-900 flex flex-col items-center justify-center p-4">
    <div class="container">
      <h1>Digital Nomad Horoscope</h1>
      <h2>By Nomad Gossip Magazine</h2>
      
      {!shouldGenerate && (
        <form
          method="POST"
          action="https://track.bentonow.com/forms/1685a00cdc1fc329724616bec1de09c6/$subscribe_horoscope?hardened=true"
          enctype="multipart/form-data"
        >
          <input type="text" name="name" id="name" placeholder="Enter your name" required>
          <input type="email" name="email" id="email" placeholder="Enter your email" required>
          <input type="date" name="birthdate" id="birthdate" required>
          <input type="hidden" name="redirect" id="redirect" value="">
          <button type="submit">Get My Next Trip</button>
        </form>
      )}
      
      {shouldGenerate && (
        <div class="result">
          <div id="loading-indicator" class="loading" style="display: block;">
            <div class="loading-spinner"></div>
            <div class="loading-stars">‚ú® üåü ‚≠ê üåô ‚ú®</div>
            <div class="loading-text">Consulting the stars for your nomadic journey...</div>
          </div>
          <div id="horoscope-result" style="display: none;"></div>
          <div id="error-message" class="error" style="display: none;"></div>
        </div>
      )}
    </div>
    
    <!-- Footer Info -->
    <div class="text-center mt-8">
      <p class="text-purple-200">
        Want more nomad insights? 
        <a href="/blog/" class="text-yellow-400 hover:text-yellow-300 underline">
          Read our blog
        </a>
        or
        <a href="/editions/" class="text-yellow-400 hover:text-yellow-300 underline">
          get the magazine
        </a>
      </p>
    </div>
  </div>

  <script>
    function updateRedirect() {
      const nameInput = document.getElementById('name');
      const birthdateInput = document.getElementById('birthdate');
      const redirectInput = document.getElementById('redirect');
      
      if (nameInput && birthdateInput && redirectInput) {
        const name = (nameInput as HTMLInputElement).value || '';
        const birthdate = (birthdateInput as HTMLInputElement).value || '';
        const redirectUrl = `${window.location.origin}/horoscope/?name=${encodeURIComponent(name)}&birthdate=${encodeURIComponent(birthdate)}&generate=true`;
        (redirectInput as HTMLInputElement).value = redirectUrl;
        console.log('Redirect URL updated:', redirectUrl);
      }
    }

    async function fetchHoroscope() {
      const urlParams = new URLSearchParams(window.location.search);
      const shouldGenerate = urlParams.get('generate') === 'true';
      const name = urlParams.get('name');
      const birthdate = urlParams.get('birthdate');
      
      if (shouldGenerate && name && birthdate) {
        const loadingIndicator = document.getElementById('loading-indicator');
        const horoscopeResult = document.getElementById('horoscope-result');
        const errorMessage = document.getElementById('error-message');
        
        try {
          const response = await fetch(`/api/horoscope?name=${encodeURIComponent(name)}&birthdate=${encodeURIComponent(birthdate)}`);
          
          if (response.ok) {
            const responseData = await response.json() as { data: { cards: Array<{ title: string, content: string }> } };
            
            if (loadingIndicator) loadingIndicator.style.display = 'none';
            if (horoscopeResult) {
              const cardsHtml = responseData.data.cards.map(card => `
                <div style="
                  background: white;
                  border-radius: 12px;
                  padding: 24px;
                  margin: 16px 0;
                  box-shadow: 0 4px 12px rgba(0, 0, 0, 0.1);
                  border-left: 4px solid #f4dc01;
                ">
                  <h3 style="
                    color: #121111;
                    font-size: 1.4rem;
                    font-weight: 700;
                    margin-bottom: 12px;
                    display: flex;
                    align-items: center;
                    gap: 8px;
                  ">
                    <span style="color: #f4dc01;">‚ú®</span>
                    ${card.title}
                  </h3>
                  <div style="
                    color: #121111;
                    line-height: 1.6;
                    font-size: 1rem;
                  ">${card.content}</div>
                </div>
              `).join('');
              
              horoscopeResult.innerHTML = `
                <h2 style="color: #121111; margin-bottom: 24px; text-align: center; font-size: 1.8rem;">Your Cosmic Journey Awaits, ${name}! üåü</h2>
                <div style="max-width: 800px; margin: 0 auto;">
                  ${cardsHtml}
                </div>
              `;
              horoscopeResult.style.display = 'block';
            }
          } else {
            throw new Error('Failed to generate horoscope');
          }
        } catch (error) {
          if (loadingIndicator) loadingIndicator.style.display = 'none';
          if (errorMessage) {
            errorMessage.textContent = 'Error: Failed to generate horoscope';
            errorMessage.style.display = 'block';
          }
        }
      }
    }

    document.addEventListener('DOMContentLoaded', function() {
      const nameInput = document.getElementById('name');
      const birthdateInput = document.getElementById('birthdate');
      
      if (nameInput && birthdateInput) {
        nameInput.addEventListener('input', updateRedirect);
        birthdateInput.addEventListener('input', updateRedirect);
        birthdateInput.addEventListener('change', updateRedirect);
      }
      
      // Fetch horoscope if parameters are present
      fetchHoroscope();
    });
  </script>
</Layout> 
