---
import { fetchReportRecords } from '~/utils/smartsuite'
import Layout, { type SEOProps } from '~/layouts/Layout.astro'
import NomadDirectoryCard from '~/components/NomadDirectoryCard.astro'
import ListYourProjectFooter from '~/components/ListYourProjectFooter.astro'
import MaterialSymbolsElectricBolt from '~icons/material-symbols/electric-bolt'

const { records = [] } = await fetchReportRecords('6857167d82358a0f5e038c3f')

// Extract unique categories for filtering
const categories = [...new Set(records.filter((record: any) => record.sf4ad525dd && record.sb685ab800?.label).map((record: any) => record.sb685ab800.label))].sort()

const seo: SEOProps = {
  title: 'Nomad Directory - The Ultimate Resource for Digital Nomads',
  description:
    'The ultimate Nomad Directory featuring the best services, communities, and organizations that support digital nomads. Find coworking spaces, tools, and resources for remote workers worldwide.',
  image: `${Astro.site}images/041ff422-b910-402f-9fd9-33e20d30055e.webp`,
  keywords: 'nomad directory, digital nomad services, remote work tools, coworking spaces, nomad communities, nomad resources',
  ogType: 'website',
  ldJSON: {
    '@context': 'https://schema.org',
    '@type': 'WebPage',
    name: 'Nomad Directory',
    description: 'Directory of services, communities, and organizations for digital nomads',
    url: `${Astro.site}nomad_directory`,
    publisher: {
      '@type': 'Organization',
      name: 'Nomad Magazine',
      logo: {
        '@type': 'ImageObject',
        url: `${Astro.site}logo.svg`,
      },
    },
  },
}
---

<Layout seo={seo}>
  <section class="bg-hoverw flex w-full flex-col items-center py-16">
    <div class="mx-auto w-full max-w-4xl px-4 text-center">
      <h1 class="mb-6 text-4xl leading-tight font-bold text-white sm:text-5xl md:text-6xl">
        <span>The </span>
        <span class="text-yellow-400">Nomad Directory</span>
        <br />
        Because Google Doesn't Get Our Lifestyle
      </h1>
      <p class="mb-8 text-lg font-medium text-gray-200 sm:text-xl">
        We're building the ultimate Nomad Directory, gathering the best services, communities, and organizations that support digital nomads. Your company can be part of it! Join
        us in shaping the go-to resource for remote workers worldwide.
      </p>
      <a
        target="_blank"
        href="https://form.smartsuite.com/s4tmc086/8sFlvrVlDC"
        class="inline-flex items-center gap-2 rounded-xl bg-yellow-400 px-8 py-4 text-lg font-bold text-black shadow transition-colors hover:bg-yellow-300"
      >
        <MaterialSymbolsElectricBolt width="20" height="20" />
        List Your Project
      </a>
    </div>

    <!-- Filter Section -->
    <div class="container mt-12 mb-8">
      <div class="flex flex-wrap justify-center gap-3" id="filter-container">
        <button class="filter-btn active rounded-full bg-yellow-400 px-4 py-2 text-sm font-medium text-black transition-colors hover:bg-yellow-300" data-category="all">
          All
        </button>
        {
          categories.map((category) => (
            <button class="filter-btn rounded-full bg-white/10 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-white/20" data-category={category}>
              {category}
            </button>
          ))
        }
      </div>
    </div>

    <div id="directory-container" class="container grid grid-cols-1 gap-6 sm:grid-cols-2 md:grid-cols-3 lg:grid-cols-4">
      <!-- @ts-ignore -->
      {
        records
          .filter((i: any) => i.sf4ad525dd)
          .map((record: any) => (
            <div class="directory-item" data-category={record.sb685ab800?.label || 'uncategorized'}>
              <NomadDirectoryCard {...record} />
            </div>
          ))
      }
    </div>
    <ListYourProjectFooter href="https://form.smartsuite.com/s4tmc086/8sFlvrVlDC" />
  </section>
</Layout>

<script>
  // Filter functionality
  const filterButtons = document.querySelectorAll('.filter-btn')
  const directoryItems = document.querySelectorAll('.directory-item')

  filterButtons.forEach((button) => {
    button.addEventListener('click', () => {
      const category = button.getAttribute('data-category')

      // Update active button
      filterButtons.forEach((btn) => btn.classList.remove('active'))
      button.classList.add('active')

      // Update button styles
      filterButtons.forEach((btn) => {
        if (btn.classList.contains('active')) {
          btn.className = 'filter-btn active rounded-full bg-yellow-400 px-4 py-2 text-sm font-medium text-black transition-colors hover:bg-yellow-300'
        } else {
          btn.className = 'filter-btn rounded-full bg-white/10 px-4 py-2 text-sm font-medium text-white transition-colors hover:bg-white/20'
        }
      })

      // Filter items
      directoryItems.forEach((item) => {
        const itemCategory = item.getAttribute('data-category')
        const htmlItem = item as HTMLElement
        if (category === 'all' || itemCategory === category) {
          htmlItem.style.display = 'block'
        } else {
          htmlItem.style.display = 'none'
        }
      })
    })
  })
</script>
