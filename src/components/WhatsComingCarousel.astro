---
interface Slide {
  image: string
  srcset?: string
  alt: string
  quote: string
  name: string
  role: string
}

interface Props {
  heading: string
  subtitle: string
  slides: Slide[]
}

const { heading, subtitle, slides }: Props = Astro.props

// Function to create URL-friendly anchor IDs (same as AuthorsGrid)
const createAnchorId = (name: string) => {
  return name.toLowerCase().replace(/\s+/g, '-').replace(/[^a-z0-9-]/g, '')
}

// Function to create story anchor IDs
const createStoryAnchorId = (name: string) => {
  return `story-${createAnchorId(name)}`
}
---

<section class="bg-white py-24">
  <div class="mx-auto max-w-7xl px-6">
    <div class="mb-16 text-center">
      <h2 class="mb-6 text-4xl font-bold text-gray-900 md:text-5xl">{heading}</h2>
      <p class="mx-auto max-w-3xl text-xl text-gray-600 leading-relaxed">{subtitle}</p>
    </div>
    
    <div class="grid gap-8 md:grid-cols-2 lg:grid-cols-3">
      {slides.map((slide, index) => (
        <article id={createStoryAnchorId(slide.name)} class="group relative overflow-hidden rounded-2xl bg-gray-50 transition-all duration-300 hover:shadow-2xl hover:-translate-y-1">
          <div class="relative h-64 overflow-hidden bg-gradient-to-br from-gray-100 to-gray-200">
            <img
              src={slide.image}
              srcset={slide.srcset}
              alt={slide.alt}
              class="h-full w-full object-contain transition-transform duration-500 group-hover:scale-105"
              loading="lazy"
            />
          </div>
          
          <div class="p-6">
            <blockquote class="mb-6 text-gray-700 leading-relaxed">
              <div class="quote-text line-clamp-4">
                "{slide.quote}"
              </div>
              <button class="read-more-btn mt-2 text-sm text-blue-600 hover:text-blue-800 font-medium cursor-pointer">
                Read More
              </button>
            </blockquote>
            
            <footer class="border-t border-gray-200 pt-4">
              <div class="font-semibold text-gray-900 mb-1">
                <a href={`#${createAnchorId(slide.name)}`} class="hover:text-blue-600 transition-colors">
                  {slide.name}
                </a>
              </div>
              <div class="text-sm text-gray-500">{slide.role}</div>
            </footer>
          </div>
        </article>
      ))}
    </div>
    
    <div class="mt-12 text-center">
      <p class="text-gray-500 text-sm">And many more exclusive stories inside...</p>
    </div>
  </div>
</section>

<style>
  .line-clamp-4 {
    display: -webkit-box;
    -webkit-line-clamp: 4;
    -webkit-box-orient: vertical;
    overflow: hidden;
  }
  
  .expanded {
    display: block;
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', function() {
    const readMoreButtons = document.querySelectorAll('.read-more-btn');
    
    readMoreButtons.forEach(button => {
      button.addEventListener('click', function() {
        const parent = button.parentElement;
        if (!parent) return;
        
        const quoteText = parent.querySelector('.quote-text');
        if (!quoteText) return;
        
        const isExpanded = quoteText.classList.contains('expanded');
        
        if (isExpanded) {
          quoteText.classList.remove('expanded');
          quoteText.classList.add('line-clamp-4');
          button.textContent = 'Read More';
        } else {
          quoteText.classList.remove('line-clamp-4');
          quoteText.classList.add('expanded');
          button.textContent = 'Read Less';
        }
      });
    });
  });
</script>
