name: Deploy Cloudflare Workers

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

on:
  workflow_dispatch:
  push:
    branches:
      - main
    paths:
      - 'cloudflare_workers/**'
  repository_dispatch:
    types: [deploy-workers]

jobs:
  deploy-workers:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        worker:
          - name: nomad-horoscope
            file: nomad_horoscope.js
            route: nomad_horoscope.nomad-magazine.com
          - name: smartsuite-dashboard
            file: smartsuite_dashboard.js
            route: smartsuite_dashboard.nomad-magazine.com
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
      
      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
      
      - name: Create worker directory
        run: |
          mkdir -p worker-temp
          cp cloudflare_workers/${{ matrix.worker.file }} worker-temp/index.js
          echo '{}' > worker-temp/package.json
      
      - name: Create wrangler.toml for worker
        run: |
          cat > worker-temp/wrangler.toml << EOF
          name = "${{ matrix.worker.name }}"
          main = "index.js"
          compatibility_date = "2025-01-15"
          compatibility_flags = ["nodejs_compat"]
          
          [[routes]]
          pattern = "${{ matrix.worker.route }}/*"
          custom_domain = true
          EOF
      
      - name: Deploy ${{ matrix.worker.name }} worker
        run: |
          cd worker-temp
          bunx wrangler@latest deploy
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Set environment variables for ${{ matrix.worker.name }}
        run: |
          cd worker-temp
          if [ "${{ matrix.worker.name }}" = "nomad-horoscope" ]; then
            echo "${{ secrets.OPENAI_API_KEY }}" | bunx wrangler@latest secret put OPENAI_API_KEY
          fi
          if [ "${{ matrix.worker.name }}" = "smartsuite-dashboard" ]; then
            echo "${{ secrets.PERSONAL_ACCESS_TOKEN }}" | bunx wrangler@latest secret put GITHUB_TOKEN
          fi
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      
      - name: Cleanup
        run: rm -rf worker-temp 
